// Autogenerated. Do not modify!
// tslint:disable:no-empty-interface

export interface BookPb {
  isbn?: number;
  title?: string;
  author?: string;
  pages?: number;
  isActivate?: boolean;
  details?: BookDetailsPb;
  id?: number;
  detailsId?: number;
  description?: string;
  videoUrl?: string;
}
export interface BookDetailsPb {
  pages?: number;
}
export interface GetBookRequestPb {
  isbn?: number;
}
export interface GetBooksResponsePb {
  items: BookPb[];
}
export interface GetBookViaAuthorPb {
  author?: string;
}
export interface GetTypesRequestPb {
  dbl?: number;
  flt?: number;
  intr32?: number;
  intr64?: number;
  uintr32?: number;
  uintr64?: number;
  suint32?: number;
  suint64?: number;
  fxd32?: number;
  fxd64?: number;
  sfxd32?: number;
  sfxd64?: number;
  bln?: boolean;
  str?: string;
  bytx?: Uint8Array;
  book?: BookPb;
  book2?: BookPb;
  books: BookPb[];
}
export interface GetTypesResponsePb {
  dbl?: number;
  flt?: number;
  intr32?: number;
  intr64?: number;
  uintr32?: number;
  uintr64?: number;
  suint32?: number;
  suint64?: number;
  fxd32?: number;
  fxd64?: number;
  sfxd32?: number;
  sfxd64?: number;
  bln?: boolean;
  str?: string;
  bytx?: Uint8Array;
  book?: BookPb;
  books: BookPb[];
}
export interface BookStorePb {
  name?: string;
  books: any;
}
export interface SpecialCasesPb {
  normal?: string;
  default?: string;
  function?: string;
  var?: string;
}

export interface GrpcBooksService {
    getTypes(req: GetTypesRequestPb): Promise<GetTypesResponsePb>;
    getBook(req: GetBookRequestPb): Promise<BookPb>;
    getBooksViaAuthor(req: GetBookViaAuthorPb): Promise<BookPb>;
    getGreatestBook(req: GetBookRequestPb): Promise<BookPb>;
    getBooks(req: GetBookRequestPb): Promise<GetBooksResponsePb>;
}
