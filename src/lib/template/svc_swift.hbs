// package: {{{packageName}}}
// file: {{{fileName}}}

import Foundation
import SwiftGRPC

{{#each services}}
@objc({{{serviceName}}}Service)
class {{{serviceName}}}Service: GrpcService {

{{#each methods}}

  @objc func {{{lcFirst methodName}}}(_ {{{requestMapFrom}}}: [String: Any], resolve: RCTPromiseResolveBlock, reject: RCTPromiseRejectBlock) -> Void {
    let svc = {{{serviceName}}}GrpcClient
    var {{{requestMapTo}}} = {{{requestTypeName}}}

    // request mapping
{{{requestMapping}}}
    // end request mapping

    do {
      let {{{responseMapFrom}}} = try svc.{{{lcFirst methodName}}}({{{requestMapTo}}})
      var {{{responseMapTo}}}: [String: Any] = [:]

      // response mapping
{{{responseMapping}}}
      // end response mapping

      resolve({{{responseMapTo}}})
    } catch {
      reject("ERROR", error.localizedDescription, error)
    }
  }

{{/each}}
  
  @objc
  static func requiresMainQueueSetup() -> Bool {
    return false
  }
}
{{/each}}